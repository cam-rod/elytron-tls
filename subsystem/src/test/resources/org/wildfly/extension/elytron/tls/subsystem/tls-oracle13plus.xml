<!-- for needs of SaslTestCase and KeyStoresTestCase -->
<subsystem xmlns="urn:wildfly:elytron-tls-subsystem:1.0" default-ssl-context="ClientSslContextNoAuth">
    <providers>
        <provider-loader name="ManagerProviderLoader" class-names="sun.security.ssl.SunJSSE"/>
        <provider-loader name="openssl" module="org.wildfly.openssl"/>
    </providers>
    <credential-stores>
        <credential-store name="test" location="target/tlstest.keystore">
            <implementation-properties>
                <property name="keyStoreType" value="JCEKS"/>
            </implementation-properties>
            <credential-reference clear-text="super_secret"/>
        </credential-store>
    </credential-stores>
    <key-stores>
        <key-store name="FireflyKeystore" >
            <credential-reference store="test" alias="master-password-alias"/>
            <implementation type="JKS" />
            <file path="firefly.keystore" relative-to="jboss.server.config.dir"/>
        </key-store>
        <key-store name="LocalhostKeystore" >
            <credential-reference store="test" alias="master-password-alias"/>
            <implementation type="JKS" />
            <file path="localhost.keystore" relative-to="jboss.server.config.dir" required="true"/>
        </key-store>
        <key-store name="ElytronTlsCaTruststore" >
            <credential-reference clear-text="Elytron"/>
            <implementation type="JKS" />
            <file path="target/test-classes/org/wildfly/extension/elytron/tls/subsystem/ca.truststore"/>
        </key-store>
        <key-store name="NewKeyStore" >
            <credential-reference clear-text="Elytron"/>
            <implementation type="JKS" />
            <file path="target/not-existing.keystore" required="false"/>
        </key-store>
        <key-store name="AutomaticKeystore" >
            <credential-reference clear-text="Elytron"/>
            <implementation/>
            <file path="firefly.keystore" relative-to="jboss.server.config.dir"/>
        </key-store>
        <!-- <filtering-key-store name="FilteringKeyStore" key-store-reference="FireflyKeystore" alias-filter="NONE:+firefly"/> -->
    </key-stores>
    <key-managers>
        <key-manager name="ServerKeyManager" algorithm="SunX509" key-store-reference="LocalhostKeystore" alias-filter="NONE:+localhost">
            <credential-reference store="test" alias="the-key-alias"/>
        </key-manager>
        <key-manager name="ClientKeyManager" algorithm="SunX509" key-store-reference="FireflyKeystore">
            <credential-reference clear-text="Elytron"/>
        </key-manager>
        <key-manager name="MyKeyManager" algorithm="SunX509" key-store-reference="FireflyKeystore" providers="ManagerProviderLoader" provider-name="SunJSSE">
            <credential-reference store="test" alias="the-key-alias"/>
        </key-manager>
    </key-managers>
    <trust-managers>
        <trust-manager name="CaTrustManager" algorithm="SunX509" key-store-reference="ElytronTlsCaTruststore" alias-filter="NONE:+mykey"/>
        <trust-manager name="MyTrustManager" algorithm="SunX509" key-store-reference="ElytronTlsCaTruststore" providers="ManagerProviderLoader" provider-name="SunJSSE"/>
        <trust-manager name="ProviderTrustManager" algorithm="SunX509" key-store-reference="ElytronTlsCaTruststore" providers="ManagerProviderLoader" provider-name="SunJSSE"/>
        <trust-manager name="trust-with-crl" algorithm="PKIX" key-store-reference="ElytronTlsCaTruststore">
            <certificate-revocation-list path="crl.pem" relative-to="jboss.server.config.dir" maximum-cert-path="2"/>
        </trust-manager>
        <trust-manager name="trust-with-multiple-crls" algorithm="PKIX" key-store-reference="ElytronTlsCaTruststore">
            <certificate-revocation-lists>
                <certificate-revocation-list path="crl.pem" relative-to="jboss.server.config.dir"/>
                <certificate-revocation-list path="crl-new.pem" relative-to="jboss.server.config.dir" />
            </certificate-revocation-lists>
        </trust-manager>
        <trust-manager name="trust-with-crl-dp" algorithm="PKIX" key-store-reference="ElytronTlsCaTruststore">
            <certificate-revocation-list />
        </trust-manager>
        <trust-manager name="trust-with-crl-dp-deprecated-max-cert-path" algorithm="PKIX" key-store-reference="ElytronTlsCaTruststore">
            <certificate-revocation-list maximum-cert-path="1"/>
        </trust-manager>
        <trust-manager name="trust-with-crls-dp" algorithm="PKIX" key-store-reference="ElytronTlsCaTruststore">
            <certificate-revocation-lists />
        </trust-manager>
        <trust-manager name="trust-with-ocsp-crl" algorithm="PKIX" key-store-reference="ElytronTlsCaTruststore" soft-fail="true" only-leaf-cert="true">
            <certificate-revocation-list />
            <ocsp responder="http://localhost/ocsp"/>
        </trust-manager>
        <trust-manager name="trust-with-ocsp-simple" algorithm="PKIX" key-store-reference="ElytronTlsCaTruststore">
            <ocsp/>
        </trust-manager>
    </trust-managers>
    <server-ssl-contexts>
        <server-ssl-context name="ServerSslContextNoAuth" key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager"/>
        <server-ssl-context name="ServerSslContextAuth" protocols="TLSv1.3 TLSv1.2 TLSv1.1" key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager"
                            want-client-auth="true" need-client-auth="true" authentication-optional="false" use-cipher-suites-order="false"
                            providers="ManagerProviderLoader" provider-name="SunJSSE" session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextTLS13" protocols="TLSv1.3 TLSv1.2 TLSv1.1" cipher-suite-names="TLS_AES_128_CCM_8_SHA256:TLS_AES_256_GCM_SHA384"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" use-cipher-suites-order="false" providers="ManagerProviderLoader" provider-name="SunJSSE"
                            session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextTLS13Only" protocols="TLSv1.3" cipher-suite-names="TLS_AES_128_CCM_8_SHA256:TLS_AES_256_GCM_SHA384"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" use-cipher-suites-order="false" providers="ManagerProviderLoader" provider-name="SunJSSE"
                            session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextTLS12Only" protocols="TLSv1.2" key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager"
                            want-client-auth="true" need-client-auth="true" authentication-optional="false" providers="ManagerProviderLoader"
                            provider-name="SunJSSE" session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextTLS13OpenSsl" protocols="TLSv1.3 TLSv1.2 TLSv1.1" cipher-suite-names="TLS_AES_128_CCM_8_SHA256:TLS_AES_256_GCM_SHA384"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" use-cipher-suites-order="false" providers="openssl"
                            session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextTLS12OnlyOpenSsl" protocols="TLSv1.2" key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager"
                            want-client-auth="true" need-client-auth="true" authentication-optional="false" providers="openssl"
                            session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextTLS13OnlyOpenSsl" protocols="TLSv1.3" cipher-suite-names="TLS_AES_128_CCM_8_SHA256:TLS_AES_256_GCM_SHA384"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" use-cipher-suites-order="false" providers="openssl"
                            session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextNoTLS13CipherSuites" protocols="TLSv1.2 TLSv1.3"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" use-cipher-suites-order="false" providers="openssl"
                            session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextSSLv2Hello" protocols="TLSv1 SSLv2Hello"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" providers="ManagerProviderLoader" provider-name="SunJSSE"
                            session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextMultipleProtocolsNoSSLv2Hello"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" providers="ManagerProviderLoader" provider-name="SunJSSE"
                            session-timeout="321" maximum-session-cache-size="123"
                            protocols="TLSv1 TLSv1.1 TLSv1.2"/>
        <server-ssl-context name="SeverSslContextSSLv2HelloOpenSsl" protocols="TLSv1 SSLv2Hello"
                            key-manager-reference="ServerKeyManager" trust-manager-reference="CaTrustManager" want-client-auth="true" need-client-auth="true"
                            authentication-optional="false" providers="openssl" session-timeout="321" maximum-session-cache-size="123"/>
        <server-ssl-context name="ServerSslContextSSLv2HelloOneWay" protocols="TLSv1 SSLv2Hello"
                            key-manager-reference="ServerKeyManager" providers="ManagerProviderLoader" provider-name="SunJSSE"
                            session-timeout="321" maximum-session-cache-size="123"/>
    </server-ssl-contexts>
    <client-ssl-contexts>
        <client-ssl-context name="ClientSslContextNoAuth" trust-manager-reference="CaTrustManager" />
        <client-ssl-context name="ClientSslContextAuth" protocols="SSLv2 SSLv3 TLSv1 TLSv1.3 TLSv1.2" key-manager-reference="ClientKeyManager" trust-manager-reference="CaTrustManager" providers="ManagerProviderLoader"/>
        <client-ssl-context name="ClientSslContextTLS13" protocols="SSLv2 SSLv3 TLSv1 TLSv1.3 TLSv1.2" cipher-suite-names="TLS_AES_128_CCM_8_SHA256:TLS_AES_256_GCM_SHA384"
                            key-manager-reference="ClientKeyManager" trust-manager-reference="CaTrustManager" providers="ManagerProviderLoader"/>
        <client-ssl-context name="ClientSslContextTLS13Only" protocols="TLSv1.3" cipher-suite-names="TLS_AES_128_GCM_SHA256"
                            key-manager-reference="ClientKeyManager" trust-manager-reference="CaTrustManager" providers="ManagerProviderLoader"/>
        <client-ssl-context name="ClientSslContextTLS13OpenSsl" protocols="SSLv2 SSLv3 TLSv1 TLSv1.3 TLSv1.2" cipher-suite-names="TLS_AES_256_GCM_SHA384:TLS_AES_128_CCM_8_SHA256"
                            key-manager-reference="ClientKeyManager" trust-manager-reference="CaTrustManager" providers="openssl"/>
        <client-ssl-context name="ClientSslContextTLS13OnlyOpenSsl" protocols="TLSv1.3" cipher-suite-names="TLS_AES_128_GCM_SHA256"
                            key-manager-reference="ClientKeyManager" trust-manager-reference="CaTrustManager" providers="openssl"/>
        <client-ssl-context name="ClientSslContextNoTLS13CipherSuites" protocols="TLSv1.2 TLSv1.3"
                            key-manager-reference="ClientKeyManager" trust-manager-reference="CaTrustManager" providers="openssl"/>
        <client-ssl-context name="ClientWithMultipleCRLs" key-manager-reference="ClientKeyManager" trust-manager-reference="trust-with-multiple-crls" />
        <client-ssl-context name="ClientSslContextSSLv2Hello" protocols="SSLv2Hello TLSv1" key-manager-reference="ClientKeyManager"
                            trust-manager-reference="CaTrustManager" providers="ManagerProviderLoader"/>
        <client-ssl-context name="ClientSslContextOnlyTLS1" protocols="TLSv1" key-manager-reference="ClientKeyManager"
                            trust-manager-reference="CaTrustManager" providers="ManagerProviderLoader" />
        <client-ssl-context name="ClientSslContextMultipleProtocolsNoSSLv2Hello" key-manager-reference="ClientKeyManager"
                            trust-manager-reference="CaTrustManager" providers="ManagerProviderLoader" protocols="TLSv1 TLSv1.1 TLSv1.2"/>
        <client-ssl-context name="ClientSslContextSSLv2HelloOpenSsl" protocols="SSLv2Hello TLSv1" key-manager-reference="ClientKeyManager"
                            trust-manager-reference="CaTrustManager" providers="openssl"/>
        <client-ssl-context name="ClientSslContextSSLv2HelloOneWay" protocols="SSLv2Hello TLSv1"
                            trust-manager-reference="CaTrustManager" providers="ManagerProviderLoader"/>
    </client-ssl-contexts>
</subsystem>
