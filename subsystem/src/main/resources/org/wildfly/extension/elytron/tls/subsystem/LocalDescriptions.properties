#
# Copyright 2022 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

elytron-tls=Elytron based subsystem for providing basic SSL/TLS features
# Operations
elytron-tls.add=Adds the Elytron TLS subsystem
elytron-tls.remove=Removes the Elytron TLS subsystem
# Attributes
elytron-tls.initial-providers=Reference to the Providers that should be registered ahead of all existing Providers.
elytron-tls.final-providers=Reference to the Providers that should be registered after all existing Providers.
elytron-tls.disallowed-providers=A list of providers that are not allowed, and will be removed from the providers list.

#####################################
# Security Properties and Providers #
#####################################

elytron-tls.security-properties=Security properties to be set.

elytron-tls.aggregate-providers=An aggregation of two or more Provider[] resources.
# Operations
elytron-tls.aggregate-providers.add=The add operation for the aggregated providers resource
elytron-tls.aggregate-providers.remove=The remove operation for the aggregated providers resource
# Attributes
elytron-tls.aggregate-providers.providers=The referenced Provider[] resources to aggregate.

elytron-tls.provider-loader=A definition for a Provider loader.
# Operations
elytron-tls.provider-loader.add=Add a new provider loader definition.
elytron-tls.provider-loader.remove=Remove a provider loader definition.
# Configuration Attributes
elytron-tls.provider-loader.module=The name of the module to load the provider from.
elytron-tls.provider-loader.class-names=The fully qualified class names of the providers to load, these are loaded after the service-loader discovered providers and duplicates will be skipped.
elytron-tls.provider-loader.path=The path of the file to use to initialise the providers.
elytron-tls.provider-loader.relative-to=The base path of the configuration file.
elytron-tls.provider-loader.argument=An argument to be passed into the constructor as the Provider is instantiated.
elytron-tls.provider-loader.configuration=The key/value configuration to be passed to the Provider to initialise it.
# Runtime Attributes
elytron-tls.provider-loader.loaded-providers=The list of providers loaded by this provider loader.
elytron-tls.provider-loader.loaded-providers.name=The name reported by the provider instance.
elytron-tls.provider-loader.loaded-providers.info=The information reported by the provider instance.
elytron-tls.provider-loader.loaded-providers.version=The version reported by the provider instance.
elytron-tls.provider-loader.loaded-providers.services=List of services available from this provider.
elytron-tls.provider-loader.loaded-providers.type=The service type.
elytron-tls.provider-loader.loaded-providers.algorithm=The algorithm supported by the service.
elytron-tls.provider-loader.loaded-providers.class-name=The class name of the implementation of the service SPI.


##################
# TLS / KeyStore #
##################

elytron-tls.key-store=A KeyStore definition.
# Operations
elytron-tls.key-store.add=Add a new KeyStore definition.
elytron-tls.key-store.remove=Remove the KeyStore definition.
elytron-tls.key-store.load=Load the KeyStore, if the KeyStore is file backed this will involve re-reading the contents of the file.
elytron-tls.key-store.store=Store the KeyStore to file, this operation will fail for any KeyStore instances not backed by a file.  If the file does not exist and it was not flagged as required it will be created.
# Configuration Attributes
elytron-tls.key-store.type=The type of the KeyStore, used when creating the new KeyStore instance.
elytron-tls.key-store.provider-name=The name of the provider to use to load the KeyStore, disables searching for the first Provider that can create a KeyStore of the specified type.
elytron-tls.key-store.credential-reference=The reference to credential stored in CredentialStore under defined alias or clear text password.
elytron-tls.key-store.credential-reference.store=The name of the credential store holding the alias to credential.
elytron-tls.key-store.credential-reference.alias=The alias which denotes stored secret or credential in the store.
elytron-tls.key-store.credential-reference.type=The type of credential this reference is denoting.
elytron-tls.key-store.credential-reference.clear-text=Secret specified using clear text. Check credential store way of supplying credential/secrets to services.
elytron-tls.key-store.relative-to=The base path this store is relative to.
elytron-tls.key-store.path=The path to the KeyStore file.
elytron-tls.key-store.required=Is the file required to exist at the time the KeyStore service starts?
elytron-tls.key-store.providers=A reference to the providers that should be used to obtain the list of Provider instances to search, if not specified the global list of providers will be used instead.
elytron-tls.key-store.alias-filter=A filter to apply to the aliases returned from the KeyStore, can either be a comma separated list of aliases to return or one of the following formats ALL:-alias1:-alias2, NONE:+alias1:+alias2
# Runtime Attributes
elytron-tls.key-store.state=The state of the underlying service that represents this KeyStore at runtime, if it is anything other than UP runtime operations will not be available.
elytron-tls.key-store.synchronized=The time this KeyStore was last loaded or saved. Note: Some providers may continue to apply updates after the KeyStore was loaded within the application server.
elytron-tls.key-store.modified=Indicates if the in-memory representation of the KeyStore has been changed since it was last loaded or stored.  Note: For some providers updates may be immediate without further load or store calls.
elytron-tls.key-store.loaded-provider=Information about the provider that was used for this KeyStore.
elytron-tls.key-store.loaded-provider.name=The name of the provider used to load the KeyStore.
elytron-tls.key-store.loaded-provider.info=The information string about the provider used to load the KeyStore.
elytron-tls.key-store.loaded-provider.version=The version of the provider used to load the KeyStore.
elytron-tls.key-store.size=The number of entries in the KeyStore.

elytron-tls.key-store.alias=An individual alias within the KeyStore.
elytron-tls.key-store.alias.remove=Immediately remove the alias from the KeyStore, the success of this operation will be dependent on the underlying KeyStore provider supporting removals.
elytron-tls.key-store.alias.creation-date=The creation date of the entry represented by this alias.
elytron-tls.key-store.alias.entry-type=The type of the entry for this alias. Note: Unrecognised types will be reported as 'Other'.

elytron-tls.key-store.alias.certificate=The certificate associated with the alias (Note: If the alias has a certificate chain this will always be undefined).
elytron-tls.key-store.alias.certificate-chain=The certificate chain associated with the alias.

elytron-tls.key-store.alias.certificate.type=The type of the certificate.
elytron-tls.key-store.alias.certificate.algorithm=The algorithm of the public key.
elytron-tls.key-store.alias.certificate.format=The format of the public key.
elytron-tls.key-store.alias.certificate.public-key=The encoded public key associated with the certificate.
elytron-tls.key-store.alias.certificate.sha-1-digest=The SHA-1 digest (finger print) of the certificate.
elytron-tls.key-store.alias.certificate.sha-256-digest=The SHA-256 digest (finger print) of the certificate.
elytron-tls.key-store.alias.certificate.encoded=The encoded value of the certificate.
elytron-tls.key-store.alias.certificate.subject=The subject from the certificate.
elytron-tls.key-store.alias.certificate.issuer=The issuer of the certificate.
elytron-tls.key-store.alias.certificate.not-before=The starting date and time the certificate is valid.
elytron-tls.key-store.alias.certificate.not-after=The expiration date and time of the certificate.
elytron-tls.key-store.alias.certificate.serial-number=The serial number of the certificate.
elytron-tls.key-store.alias.certificate.signature-algorithm=The algorithm used to generate the certificates signature.
elytron-tls.key-store.alias.certificate.signature=The signature of the certificate.
elytron-tls.key-store.alias.certificate.version=The certificate version.

elytron-tls.key-store.alias.certificate-chain.type=The type of the certificate.
elytron-tls.key-store.alias.certificate-chain.algorithm=The algorithm of the public key.
elytron-tls.key-store.alias.certificate-chain.format=The format of the public key.
elytron-tls.key-store.alias.certificate-chain.public-key=The encoded public key associated with the certificate.
elytron-tls.key-store.alias.certificate-chain.sha-1-digest=The SHA-1 digest (finger print) of the certificate.
elytron-tls.key-store.alias.certificate-chain.sha-256-digest=The SHA-256 digest (finger print) of the certificate.
elytron-tls.key-store.alias.certificate-chain.encoded=The encoded value of the certificate.
elytron-tls.key-store.alias.certificate-chain.subject=The subject from the certificate.
elytron-tls.key-store.alias.certificate-chain.issuer=The issuer of the certificate.
elytron-tls.key-store.alias.certificate-chain.not-before=The starting date and time the certificate is valid.
elytron-tls.key-store.alias.certificate-chain.not-after=The expiration date and time of the certificate.
elytron-tls.key-store.alias.certificate-chain.serial-number=The serial number of the certificate.
elytron-tls.key-store.alias.certificate-chain.signature-algorithm=The algorithm used to generate the certificates signature.
elytron-tls.key-store.alias.certificate-chain.signature=The signature of the certificate.
elytron-tls.key-store.alias.certificate-chain.version=The certificate version.

elytron-tls.key-manager=A key manager definition for creating the KeyManager as used to create an SSLContext.
#operations
elytron-tls.key-manager.add=Add the new key manager definition.
elytron-tls.key-manager.remove=Remove the key manager definition.
elytron-tls.key-manager.init=Reinitialize key manager.
# Attributes
elytron-tls.key-manager.algorithm=The name of the algorithm to use to create the underlying KeyManagerFactory.
elytron-tls.key-manager.providers=Reference to obtain the Provider[] to use when creating the underlying KeyManagerFactory.
elytron-tls.key-manager.provider-name=The name of the provider to use to create the underlying KeyManagerFactory.
elytron-tls.key-manager.credential-reference=The credential reference to decrypt KeyStore item. (Not a password of the KeyStore.)
elytron-tls.key-manager.credential-reference.store=The name of the credential store holding the alias to credential.
elytron-tls.key-manager.credential-reference.alias=The alias which denotes stored secret or credential in the store.
elytron-tls.key-manager.credential-reference.type=The type of credential this reference is denoting.
elytron-tls.key-manager.credential-reference.clear-text=The secret specified using clear text. Check credential store way of supplying credential/secrets to services.
elytron-tls.key-manager.alias-filter=A filter to apply to the aliases returned from the KeyStore, can either be a comma separated list of aliases to return or one of the following formats ALL:-alias1:-alias2, NONE:+alias1:+alias2
elytron-tls.key-manager.generate-self-signed-certificate-host=If the file that backs the KeyStore does not exist and this attribute is set, then a self-signed certificate will be generated for the specified host name. This is not intended for production use.

elytron-tls.key-manager.key-store=KeyStore object to use to initialise the underlying KeyManagerFactory.
elytron-tls.key-manager.key-store.type=The type of the KeyStore, used when creating the new KeyStore instance.
elytron-tls.key-manager.key-store.provider-name=The name of the provider to use to load the KeyStore, disables searching for the first Provider that can create a KeyStore of the specified type.
elytron-tls.key-manager.key-store.credential-reference=The reference to credential stored in CredentialStore under defined alias or clear text password.
elytron-tls.key-manager.key-store.credential-reference.store=The name of the credential store holding the alias to credential.
elytron-tls.key-manager.key-store.credential-reference.alias=The alias which denotes stored secret or credential in the store.
elytron-tls.key-manager.key-store.credential-reference.type=The type of credential this reference is denoting.
elytron-tls.key-manager.key-store.credential-reference.clear-text=Secret specified using clear text. Check credential store way of supplying credential/secrets to services.
elytron-tls.key-manager.key-store.relative-to=The base path this store is relative to.
elytron-tls.key-manager.key-store.path=The path to the KeyStore file.
elytron-tls.key-manager.key-store.required=Is the file required to exist at the time the KeyStore service starts?
elytron-tls.key-manager.key-store.providers=A reference to the providers that should be used to obtain the list of Provider instances to search, if not specified the global list of providers will be used instead.
elytron-tls.key-manager.key-store.alias-filter=A filter to apply to the aliases returned from the KeyStore, can either be a comma separated list of aliases to return or one of the following formats ALL:-alias1:-alias2, NONE:+alias1:+alias2

elytron-tls.trust-manager=A trust manager definition for creating the TrustManager[] as used to create an SSLContext.
#operations
elytron-tls.trust-manager.add=Add the new trust manager definition.
elytron-tls.trust-manager.remove=Remove the trust manager definition.
elytron-tls.trust-manager.init=Reinitialize trust manager.
# Attributes
elytron-tls.trust-manager.algorithm=The name of the algorithm to use to create the underlying TrustManagerFactory.
elytron-tls.trust-manager.providers=Reference to obtain the Provider[] to use when creating the underlying TrustManagerFactory.
elytron-tls.trust-manager.provider-name=The name of the provider to use to create the underlying TrustManagerFactory.
elytron-tls.trust-manager.alias-filter=A filter to apply to the aliases returned from the KeyStore, can either be a comma separated list of aliases to return or one of the following formats ALL:-alias1:-alias2, NONE:+alias1:+alias2
elytron-tls.trust-manager.maximum-cert-path=The maximum number of non-self-issued intermediate certificates that may exist in a certification path for OCSP and CRL checks. If neither OCSP and CRL is configured, this attribute has no effect.
elytron-tls.trust-manager.only-leaf-cert=Whether only leaf certificate should be checked for revocation status.
elytron-tls.trust-manager.soft-fail=Whether a certificate with unknown OCSP response should be accepted.
elytron-tls.trust-manager.certificate-revocation-list=Enables certificate revocation list checks to a trust manager.
elytron-tls.trust-manager.certificate-revocation-list.path=The path to the configuration to use to initialise the provider.
elytron-tls.trust-manager.certificate-revocation-list.relative-to=The base path of the certificate revocation list file.
elytron-tls.trust-manager.certificate-revocation-list.maximum-cert-path=The maximum number of non-self-issued intermediate certificates that may exist in a certification path.
elytron-tls.trust-manager.certificate-revocation-list.maximum-cert-path.deprecated=Use 'maximum-cert-path' in trust manager proper.
elytron-tls.trust-manager.ocsp=Enables online certificate status protocol checks to a trust manager.
elytron-tls.trust-manager.ocsp.prefer-crls=Whether a certificate-revocation-list should be preferred over OCSP.
elytron-tls.trust-manager.ocsp.responder=The URL of OCSP responder to use. Keep undefined to use responder from the certificate.
elytron-tls.trust-manager.ocsp.responder-certificate=The alias for OCSP Responder certificate. Keep undefined to use the issuer of certificate in validation.
elytron-tls.trust-manager.ocsp.responder-keystore-reference=Reference to the keystore for responder-certificate. Keep undefined to use trust-manager keystore. Requires responder-certificate to be defined.
elytron-tls.trust-manager.ocsp.responder-keystore=Keystore object for responder-certificate. Keep undefined to use trust-manager keystore. Requires responder-certificate to be defined.
elytron-tls.trust-manager.ocsp.responder-keystore.type=The type of the KeyStore, used when creating the new KeyStore instance.
elytron-tls.trust-manager.ocsp.responder-keystore.provider-name=The name of the provider to use to load the KeyStore, disables searching for the first Provider that can create a KeyStore of the specified type.
elytron-tls.trust-manager.ocsp.responder-keystore.credential-reference=The reference to credential stored in CredentialStore under defined alias or clear text password.
elytron-tls.trust-manager.ocsp.responder-keystore.credential-reference.store=The name of the credential store holding the alias to credential.
elytron-tls.trust-manager.ocsp.responder-keystore.credential-reference.alias=The alias which denotes stored secret or credential in the store.
elytron-tls.trust-manager.ocsp.responder-keystore.credential-reference.type=The type of credential this reference is denoting.
elytron-tls.trust-manager.ocsp.responder-keystore.credential-reference.clear-text=Secret specified using clear text. Check credential store way of supplying credential/secrets to services.
elytron-tls.trust-manager.ocsp.responder-keystore.relative-to=The base path this store is relative to.
elytron-tls.trust-manager.ocsp.responder-keystore.path=The path to the KeyStore file.
elytron-tls.trust-manager.ocsp.responder-keystore.required=Is the file required to exist at the time the KeyStore service starts?
elytron-tls.trust-manager.ocsp.responder-keystore.providers=A reference to the providers that should be used to obtain the list of Provider instances to search, if not specified the global list of providers will be used instead.
elytron-tls.trust-manager.ocsp.responder-keystore.alias-filter=A filter to apply to the aliases returned from the KeyStore, can either be a comma separated list of aliases to return or one of the following formats ALL:-alias1:-alias2, NONE:+alias1:+alias2
elytron-tls.trust-manager.reload-certificate-revocation-list=Notify the trust manager in order to reload the certificate revocation list, if defined.
elytron-tls.trust-manager.certificate-revocation-lists=Enables certificate revocation list checks to a trust manager using multiple certificate revocation lists.
elytron-tls.trust-manager.certificate-revocation-lists.path=The path to the certificate revocation list.
elytron-tls.trust-manager.certificate-revocation-lists.relative-to=The base path of the certificate revocation list file.

elytron-tls.trust-manager.key-store=KeyStore object to use to initialise the underlying TrustManagerFactory.
elytron-tls.trust-manager.key-store.type=The type of the KeyStore, used when creating the new KeyStore instance.
elytron-tls.trust-manager.key-store.provider-name=The name of the provider to use to load the KeyStore, disables searching for the first Provider that can create a KeyStore of the specified type.
elytron-tls.trust-manager.key-store.credential-reference=The reference to credential stored in CredentialStore under defined alias or clear text password.
elytron-tls.trust-manager.key-store.credential-reference.store=The name of the credential store holding the alias to credential.
elytron-tls.trust-manager.key-store.credential-reference.alias=The alias which denotes stored secret or credential in the store.
elytron-tls.trust-manager.key-store.credential-reference.type=The type of credential this reference is denoting.
elytron-tls.trust-manager.key-store.credential-reference.clear-text=Secret specified using clear text. Check credential store way of supplying credential/secrets to services.
elytron-tls.trust-manager.key-store.relative-to=The base path this store is relative to.
elytron-tls.trust-manager.key-store.path=The path to the KeyStore file.
elytron-tls.trust-manager.key-store.required=Is the file required to exist at the time the KeyStore service starts?
elytron-tls.trust-manager.key-store.providers=A reference to the providers that should be used to obtain the list of Provider instances to search, if not specified the global list of providers will be used instead.
elytron-tls.trust-manager.key-store.alias-filter=A filter to apply to the aliases returned from the KeyStore, can either be a comma separated list of aliases to return or one of the following formats ALL:-alias1:-alias2, NONE:+alias1:+alias2
elytron-tls.trust-manager.key-store-reference=Reference to the KeyStore to use to initialise the underlying TrustManagerFactory.

# TODO: trust/key manager objects for SSL context

elytron-tls.client-ssl-context=An SSLContext for use on the client side of a connection.
# operations
elytron-tls.client-ssl-context.add=Add the SSLContext definition.
elytron-tls.client-ssl-context.remove=Remove the SSLContext definition.
#Attributes
elytron-tls.client-ssl-context.cipher-suite-filter=The filter to apply to specify the enabled cipher suites for TLSv1.2 and below.
elytron-tls.client-ssl-context.cipher-suite-names=The filter to apply to specify the enabled cipher suites for TLSv1.3.
elytron-tls.client-ssl-context.protocols=The enabled protocols.
elytron-tls.client-ssl-context.use-cipher-suites-order=To honor local cipher suites preference.
elytron-tls.client-ssl-context.maximum-session-cache-size=The maximum number of SSL sessions in the cache. The default value -1 means use the JVM default value. Value zero means there is no limit.
elytron-tls.client-ssl-context.session-timeout=The timeout for SSL sessions, in seconds. The default value -1 means use the JVM default value. Value zero means there is no limit.
#elytron-tls.client-ssl-context.key-manager=Key manager object to use within the SSLContext.
elytron-tls.client-ssl-context.key-manager-reference=Reference to the key manager to use within the SSLContext.
elytron-tls.client-ssl-context.key-refresh=Refresh KeyManager used by SSLContext.
#elytron-tls.client-ssl-context.trust-manager=Trust manager object to use within the SSLContext.
elytron-tls.client-ssl-context.trust-manager-reference=Reference to the trust manager to use within the SSLContext.
elytron-tls.client-ssl-context.provider-name=The name of the provider to use. If not specified, all providers from providers will be passed to the SSLContext.
elytron-tls.client-ssl-context.providers=The name of the providers to obtain the Provider[] to use to load the SSLContext.

# Runtime Attributes
elytron-tls.client-ssl-context.active-session-count=The count of current active sessions.

elytron-tls.client-ssl-context.ssl-session=A currently established SSL session.
elytron-tls.client-ssl-context.ssl-session.application-buffer-size=The application buffer size as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.cipher-suite=The selected cipher suite as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.creation-time=The creation time as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.last-accessed-time=The last accessed time as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.local-principal=The local principal as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.packet-buffer-size=The packet buffer size as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.peer-host=The peer host as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.peer-port=The peer port as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.peer-principal=The peer principal as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.protocol=The protocol as reported by the SSLSession.
elytron-tls.client-ssl-context.ssl-session.valid=The validity of the session as reported by the SSLSession.

elytron-tls.client-ssl-context.ssl-session.local-certificates=The local certificates from the SSLSession.
elytron-tls.client-ssl-context.ssl-session.local-certificates.type=The type of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.algorithm=The algorithm of the public key.
elytron-tls.client-ssl-context.ssl-session.local-certificates.format=The format of the public key.
elytron-tls.client-ssl-context.ssl-session.local-certificates.public-key=The encoded public key associated with the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.sha-1-digest=The SHA-1 digest (finger print) of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.sha-256-digest=The SHA-256 digest (finger print) of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.encoded=The encoded value of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.subject=The subject from the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.issuer=The issuer of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.not-before=The starting date and time the certificate is valid.
elytron-tls.client-ssl-context.ssl-session.local-certificates.not-after=The expiration date and time of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.serial-number=The serial number of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.signature-algorithm=The algorithm used to generate the certificates signature.
elytron-tls.client-ssl-context.ssl-session.local-certificates.signature=The signature of the certificate.
elytron-tls.client-ssl-context.ssl-session.local-certificates.version=The certificate version.

elytron-tls.client-ssl-context.ssl-session.peer-certificates=The peer certificates from the SSLSession.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.type=The type of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.algorithm=The algorithm of the public key.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.format=The format of the public key.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.public-key=The encoded public key associated with the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.sha-1-digest=The SHA-1 digest (finger print) of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.sha-256-digest=The SHA-256 digest (finger print) of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.encoded=The encoded value of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.subject=The subject from the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.issuer=The issuer of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.not-before=The starting date and time the certificate is valid.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.not-after=The expiration date and time of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.serial-number=The serial number of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.signature-algorithm=The algorithm used to generate the certificates signature.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.signature=The signature of the certificate.
elytron-tls.client-ssl-context.ssl-session.peer-certificates.version=The certificate version.


elytron-tls.server-ssl-context=An SSLContext for use on the server side of a connection.
# operations
elytron-tls.server-ssl-context.add=Add the SSLContext definition.
elytron-tls.server-ssl-context.remove=Remove the SSLContext definition.
#Attributes
elytron-tls.server-ssl-context.security-domain=The security domain to use for authentication during SSL session establishment.
elytron-tls.server-ssl-context.cipher-suite-filter=The filter to apply to specify the enabled cipher suites for TLSv1.2 and below.
elytron-tls.server-ssl-context.cipher-suite-names=The filter to apply to specify the enabled cipher suites for TLSv1.3.
elytron-tls.server-ssl-context.protocols=The enabled protocols.
elytron-tls.server-ssl-context.want-client-auth=To request (but not to require) a client certificate on SSL handshake. If a security domain is referenced and supports X509 evidence, this will be set to true automatically. Ignored when need-client-auth is set.
elytron-tls.server-ssl-context.need-client-auth=To require a client certificate on SSL handshake. Connection without trusted client certificate (see trust-manager) will be rejected.
elytron-tls.server-ssl-context.authentication-optional=Rejecting of the client certificate by the security domain will not prevent the connection. Allows a fall through to use other authentication mechanisms (like form login) when the client certificate is rejected by security domain. Has an effect only when the security domain is set.
elytron-tls.server-ssl-context.use-cipher-suites-order=To honor local cipher suites preference.
elytron-tls.server-ssl-context.maximum-session-cache-size=The maximum number of SSL sessions in the cache. The default value -1 means use the JVM default value. Value zero means there is no limit.
elytron-tls.server-ssl-context.session-timeout=The timeout for SSL sessions, in seconds. The default value -1 means use the JVM default value. Value zero means there is no limit.
elytron-tls.server-ssl-context.wrap=Should the SSLEngine, SSLSocket, and SSLServerSocket instances returned be wrapped to protect against further modification.
#elytron-tls.server-ssl-context.key-manager=Key manager object to use within the SSLContext.
elytron-tls.server-ssl-context.key-manager-reference=Reference to the key manager to use within the SSLContext.
elytron-tls.server-ssl-context.key-refresh=Refresh KeyManager used by SSLContext.
#elytron-tls.server-ssl-context.trust-manager=Trust manager object to use within the SSLContext.
elytron-tls.server-ssl-context.trust-manager-reference=Reference to the trust manager to use within the SSLContext.
elytron-tls.server-ssl-context.pre-realm-principal-transformer=A principal transformer to apply before the realm is selected.
elytron-tls.server-ssl-context.post-realm-principal-transformer=A principal transformer to apply after the realm is selected.
elytron-tls.server-ssl-context.final-principal-transformer=A final principal transformer to apply for this mechanism realm.
elytron-tls.server-ssl-context.realm-mapper=The realm mapper to be used for SSL authentication.
elytron-tls.server-ssl-context.provider-name=The name of the provider to use. If not specified, all providers from providers will be passed to the SSLContext.
elytron-tls.server-ssl-context.providers=The name of the providers to obtain the Provider[] to use to load the SSLContext.
# Runtime Attributes
elytron-tls.server-ssl-context.active-session-count=The count of current active sessions.

elytron-tls.server-ssl-context.ssl-session=A currently established SSL session.
elytron-tls.server-ssl-context.ssl-session.application-buffer-size=The application buffer size as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.cipher-suite=The selected cipher suite as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.creation-time=The creation time as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.last-accessed-time=The last accessed time as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.local-principal=The local principal as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.packet-buffer-size=The packet buffer size as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.peer-host=The peer host as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.peer-port=The peer port as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.peer-principal=The peer principal as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.protocol=The protocol as reported by the SSLSession.
elytron-tls.server-ssl-context.ssl-session.valid=The validity of the session as reported by the SSLSession.

elytron-tls.server-ssl-context.ssl-session.local-certificates=The local certificates from the SSLSession.
elytron-tls.server-ssl-context.ssl-session.local-certificates.type=The type of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.algorithm=The algorithm of the public key.
elytron-tls.server-ssl-context.ssl-session.local-certificates.format=The format of the public key.
elytron-tls.server-ssl-context.ssl-session.local-certificates.public-key=The encoded public key associated with the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.sha-1-digest=The SHA-1 digest (finger print) of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.sha-256-digest=The SHA-256 digest (finger print) of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.encoded=The encoded value of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.subject=The subject from the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.issuer=The issuer of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.not-before=The starting date and time the certificate is valid.
elytron-tls.server-ssl-context.ssl-session.local-certificates.not-after=The expiration date and time of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.serial-number=The serial number of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.signature-algorithm=The algorithm used to generate the certificates signature.
elytron-tls.server-ssl-context.ssl-session.local-certificates.signature=The signature of the certificate.
elytron-tls.server-ssl-context.ssl-session.local-certificates.version=The certificate version.

elytron-tls.server-ssl-context.ssl-session.peer-certificates=The peer certificates from the SSLSession.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.type=The type of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.algorithm=The algorithm of the public key.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.format=The format of the public key.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.public-key=The encoded public key associated with the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.sha-1-digest=The SHA-1 digest (finger print) of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.sha-256-digest=The SHA-256 digest (finger print) of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.encoded=The encoded value of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.subject=The subject from the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.issuer=The issuer of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.not-before=The starting date and time the certificate is valid.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.not-after=The expiration date and time of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.serial-number=The serial number of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.signature-algorithm=The algorithm used to generate the certificates signature.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.signature=The signature of the certificate.
elytron-tls.server-ssl-context.ssl-session.peer-certificates.version=The certificate version.

# Operations
elytron-tls.server-ssl-context.ssl-session.invalidate=Invalidate the SSLSession (Note: This does not terminate current connections, only prevents future connections from joining or resuming this session).
